%h1 #{@club.short_name} Registration for #{@registration.season.name} 
= semantic_form_for @registration, :url => registration_create_path(@club.subdomain) do |reg|
  %hr
  -#= reg.inputs "Player Information" do
  = reg.inputs "Information" do
    %hr
    = reg.semantic_fields_for :player do |player|
      = player.semantic_fields_for :person do |person|
        = person.input :first_name, :label => "First Name", :required => true
        = person.input :last_name, :label => "Last Name", :required => true
        = person.input :street1, :label => "Address", :required => true
        = person.input :city, :as => :select, :include_blank => false, :collection => @cities, :required => true
        = person.input :province, :as => :select, :include_blank => false, :collection => %w{ BC AB SK MB ON QC NB PE NS NF YK NW NV }, :required => true
        = person.input :country, :as => :select, :include_blank => false, :collection => %w{ Canada USA }, :required => true
        = person.input :postal_code, :label => "Postal Code", :required => true
        = person.input :phone, :as => :phone, :label => "Home Phone", :required => true
        = person.input :phone_type, :as => :hidden, :input_html => {:value => "Home"}
      = player.input :carecard, :label => "CareCard #", :required => true
      = player.input :birthdate, :as => :date, :include_blank => false, :start_year => Date.today.years_ago(20).year, :end_year => Date.today.years_ago(5).year, :required => true
      = player.input :gender, :as => :select, :include_blank => false, :collection => %w{ Male Female }, :required => true
    = reg.semantic_fields_for :registration_question_responses do |rqr|
      - next if !rqr.object.registration_question.player_field
      = rqr.input :registration_question_id, :as => :hidden, :input_html => {:value => rqr.object.registration_question.id}
      - if rqr.object.registration_question.questiontype == "string"
        = rqr.input :textresponse, :as => :string, :label => replace_placeholders(rqr.object.registration_question.page_label, @registration), :hint => replace_placeholders(rqr.object.registration_question.questiontext, @registration)
      - elsif rqr.object.registration_question.questiontype == "text"
        = rqr.input :textresponse, :as => :text, :label => replace_placeholders(rqr.object.registration_question.page_label, @registration), :hint => replace_placeholders(rqr.object.registration_question.questiontext, @registration)
      - else
        = rqr.input :registration_question_response_option, :as => :select, :include_blank => rqr.object.registration_question.response_optional, :collection => question_response_options(rqr.object.registration_question, @registration), :label => replace_placeholders(rqr.object.registration_question.page_label, @registration), :hint => replace_placeholders(rqr.object.registration_question.questiontext, @registration)
    = reg.input :season_id, :as => :hidden
  %hr
  - if @registration.registrations_people.empty?
    - @registration.registrations_people.build(:person => Person.new(@person_defaults), :person_role => PersonRole.find_by_role_abbreviation('PG'), :primary => true)
    = render :partial => 'registrations_people_fields', :locals => {:reg => reg}
  - else
    = render :partial => 'registrations_people_fields', :locals => {:reg => reg}#, :object => @registration.registrations_people
  %hr
  = reg.buttons do
    = reg.commit_button :label => "Proceed to Step 2"
  -#= new_child_fields_template(:registrations_people) do
    -#= render 'registrations_people_fields', :object => @registration.registrations_people.build(:person => Person.new(@person_defaults), :person_role => PersonRole.find_by_role_abbreviation('PG'), :primary => false), :locals => {:reg => reg}

-#= yield :registrations_people_fields_template